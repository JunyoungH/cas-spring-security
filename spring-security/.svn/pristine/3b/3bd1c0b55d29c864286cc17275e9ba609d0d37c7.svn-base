package com.techstudio.dao.am;

import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Repository;

import com.techstudio.dao.BaseJPARepository;
import com.techstudio.model.am.OrganizationDTO;
import com.techstudio.model.am.OrganizationRoleDTO;


@Repository
public interface OrganizationRoleDao extends BaseJPARepository<OrganizationRoleDTO, Long>{

	List<OrganizationRoleDTO> findByOrganizationDTO(OrganizationDTO organizationDTO);

	List<OrganizationRoleDTO> findByOrganizationDTO_OrganizationId(Long id);

	void deleteByOrganizationDTO_OrganizationId(Long organizationId);
	
	List<OrganizationRoleDTO> findByOrganizationDTO_OuAndRoleDTO_RoleIdGreaterThanOrOrganizationDTO_OuLikeAndRoleDTO_RoleIdGreaterThanAndOrganizationDTO_hierarchyLevelBetween(
			String currentLoginOu, long maxPredefinedRoleId, String string, long i,
			int currentLoginHierarchyLevel, int j);

	Page<OrganizationRoleDTO> findByOrganizationDTO_OuAndRoleDTO_RoleIdGreaterThanOrOrganizationDTO_OuLikeAndRoleDTO_RoleIdGreaterThanAndOrganizationDTO_hierarchyLevelBetween(
			String currentLoginOu, long maxPredefinedRoleId, String string, long i,
			int currentLoginHierarchyLevel, int j, Pageable pageRequest);

	List<OrganizationRoleDTO> findByRoleDTO_RoleIdGreaterThanAndOrganizationDTO_hierarchyLevelBetween(
			long maxPredefinedRoleId, int currentLoginHierarchyLevel, int i);

	Page<OrganizationRoleDTO> findByRoleDTO_RoleIdGreaterThanAndOrganizationDTO_hierarchyLevelBetween(
			long maxPredefinedRoleId, int currentLoginHierarchyLevel, int i,
			Pageable pageRequest);

	List<OrganizationRoleDTO> findByOrganizationDTO_OuAndRoleDTO_Name(
			String ou, String roleName);

	List<OrganizationRoleDTO> findByOrganizationDTO_OuAndRoleDTO_NameAndRoleDTO_RoleIdNot(
			String ou, String roleName, Long roleId);

	void deleteByRoleDTO_RoleId(Long roleId);

}
