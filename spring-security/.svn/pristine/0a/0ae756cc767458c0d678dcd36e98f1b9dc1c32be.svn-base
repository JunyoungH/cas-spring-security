package com.techstudio.test;

import static org.assertj.core.api.Assertions.assertThat;

import org.junit.Before;
import org.junit.Test;
import org.springframework.security.authentication.encoding.LdapShaPasswordEncoder;

public class LdapShaPasswordEncoderTest {
	
	private LdapShaPasswordEncoder SSHA;

	@Before
	public void setUp() throws Exception {
		SSHA = new LdapShaPasswordEncoder();
	}
	
	//Verify 2 encoders are using the same algorithm
	@Test
	public void verifyPasswordAfterEncoderIsSameAsEncryptedPasswordInLdap() {
		System.out.println("Salt: "+LdapShaSaltHelper.extractSalt("{ssha}VhNz4XsBoBn0ZJd8EysOBkZqRXJtNSCtwAMANA=="));
		System.out.println("Salt: "+LdapShaSaltHelper.extractSalt("{ssha}wH8HYXOt8m1TC/fLnwzLvVCpK4lzjFWynuBxGA=="));
		System.out.println("Salt: "+LdapShaSaltHelper.extractSalt("{ssha}gy1AaLi8KZM4YhQqhueJjwSW1NSNNF26oXXhIw=="));
		System.out.println("Salt: "+LdapShaSaltHelper.extractSalt("{ssha}RDaGHdNCwwADQpoV/b7BALvKkeUKWJEZIvaU2w=="));
		System.out.println("Salt: "+LdapShaSaltHelper.extractSalt("{ssha}SMGys6n5UbbPwHdO9EiIDjpkpjXnxov6HyBNLA=="));
		assertThat(
				SSHA.encodePassword("T3chstudi0", LdapShaSaltHelper.extractSalt("{ssha}SMGys6n5UbbPwHdO9EiIDjpkpjXnxov6HyBNLA=="))
						.equals("{SSHA}SMGys6n5UbbPwHdO9EiIDjpkpjXnxov6HyBNLA==")).isTrue();
	}
	
	//Verify small letter prefix is acceptable for password validation
	@Test
	public void verifyEncryptedPasswordByUsingPlainPasswordWithCapitalPrefix() {
		assertThat(SSHA.isPasswordValid("{SSHA}SMGys6n5UbbPwHdO9EiIDjpkpjXnxov6HyBNLA==",
                "T3chstudi0", null)).isTrue();
	}
	
	@Test
	public void verifyEncryptedPasswordByUsingPlainPasswordWithSmallLetterPrefix() {
		assertThat(SSHA.isPasswordValid("{ssha}SMGys6n5UbbPwHdO9EiIDjpkpjXnxov6HyBNLA==",
                "T3chstudi0", null)).isTrue();
	}

}
