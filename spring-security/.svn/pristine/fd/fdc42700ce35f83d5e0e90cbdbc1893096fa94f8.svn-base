<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xmlns:context="http://www.springframework.org/schema/context"  
 xmlns:util="http://www.springframework.org/schema/util" 
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xmlns:security="http://www.springframework.org/schema/security"
 xmlns:aop="http://www.springframework.org/schema/aop"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:jpa="http://www.springframework.org/schema/data/jpa"
 xmlns:ws="http://www.springframework.org/schema/web-services"
 xmlns:p="http://www.springframework.org/schema/p"
 xsi:schemaLocation="
 http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services.xsd">  
 
 
 <context:component-scan base-package="com.techstudio.dao*" /> 
 <context:component-scan base-package="com.techstudio.service*" /> 
 <jpa:repositories base-package="com.techstudio.dao.am" />
 <context:component-scan base-package="com.techstudio.form.controller*" />
 <context:component-scan base-package="com.techstudio.common*" />
 <context:property-placeholder location="classpath:config.properties" />
 
 
 <mvc:annotation-driven />
 <tx:annotation-driven transaction-manager="transactionManager"/>
 
 	<!--Spring data -->
 
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
		<property name="driverClassName" value="${database.driver}" />  
		<property name="url" value="${database.url}" />  
		<property name="username" value="${database.user}" />  
		<property name="password" value="${database.password}" />  
	</bean>   
 
 <!-- Necessary to get the entity manager injected into the factory bean -->
<!--     <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" /> -->
 	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
 	
  <!-- Entity Manager Factory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    	<property name="persistenceUnitName" value="jcgPersistence" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
        <property name="jpaDialect" ref="jpaDialect" />
        <property name="jpaProperties">
         <props>
            <prop key="hibernate.hbm2ddl.auto">update</prop>
            <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
         </props>
      </property>
       <property name="packagesToScan" value="com.techstudio.model.am"/>
    </bean>
    
    <!-- Define JPA Vendor Adapter -->
     <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="true"/>
        <property name="generateDdl" value="true"/>
        <property name="database" value="MYSQL"/>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
	 
	 
	  <!--hiberante setup  
	 <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
	   <property name="sessionFactory" ref="sessionFactory" /> 
	 </bean>
 


 <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
  <property name="dataSource" ref="dataSource" />   
  <property name="hibernateProperties">  
   <props>  
    <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>  
    <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
    <prop key="hibernate.hbm2ddl.auto">update</prop>
    <prop key="current_session_context_class">thread</prop>
	<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
	<prop key="hibernate.cache.provider_configuration_file_resource_path">/WEB-INF/ehcache.xml</prop>
	<prop key="hibernate.cache.use_query_cache">true</prop>
	<prop key="hibernate.cache.use_second_level_cache">true</prop>
	
   </props>  
  </property>
  
  <property name="packagesToScan">
	<list>
		<value>com.techstudio.model.wilasbase</value>
	</list>
  </property>
 </bean--> 
  
 <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />  
 
 
 <!-- Json Converter -->
 <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json" />
	</bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	    <property name="messageConverters">
	      <list>
	        <ref bean="jacksonMessageConverter"/>
	      </list>
	    </property>
 </bean>
 
 <!-- servlet -->
 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    <property name="prefix" value="/WEB-INF/views/"/>
    <property name="suffix" value=".jsp"/> 
    <property name="redirectHttp10Compatible" value="false" />
 </bean>  
  
  <!--Spring message -->
  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n/messages"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
        <property name="defaultEncoding" value="UTF-8" />
  </bean>
  <mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="locale" />
		</bean>
 </mvc:interceptors>
  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>
  
  
  <!--LoadPic Setting-->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
  	 <!-- setting maximum upload size -->
        <property name="maxUploadSize" value="2048000" />
  </bean>
  
  <!--For email setting--> 
   	
   	<!-- our Authenticator implementation -->
	<bean id="MailAuthenticator" class="com.techstudio.common.am.MailAuthenticator">
		<constructor-arg value="${email.account}" />
		<constructor-arg value="${email.password}" />
	</bean>

        <!-- now setup an authenticated session -->
	<bean id="mailSession" class="javax.mail.Session" factory-method="getInstance">
		<constructor-arg>
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtps.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.socketFactory.port">${email.port}</prop>
			</props>
		</constructor-arg>
		<constructor-arg ref="MailAuthenticator" />
	</bean>
   	
    <!-- and configure the MailSender -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${email.server}" />
		<property name="session" ref="mailSession" />
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>

	<!-- this is a template message that we can pre-load with default state -->
	<bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="${email.sender}" />
		<property name="subject" value="WILAS SYSTEM EMAIL" />
	</bean>
 
	<bean id="easyMail" class="com.techstudio.common.am.EasyMail">
		<constructor-arg ref="mailSender" />
		<constructor-arg ref="templateMessage" />
	</bean>	
   
	<!-- security -->
	<security:global-method-security pre-post-annotations="enabled" />	
  
	<!-- security with cas integration & mysql user service-->
	<security:http entry-point-ref="casProcessingFilterEntryPoint">
		<security:logout logout-success-url="/caslogout.wilas" /> <!-- todo: create page to redirect to cas -->
		<security:custom-filter ref="casAuthenticationFilter" after="CAS_FILTER"/>
	</security:http>
	<security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="casAuthenticationProvider"/>
    </security:authentication-manager>
    <bean id="casProcessingFilterEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="loginUrl" value="${cas.server.url}/login"/>
        <property name="serviceProperties" ref="serviceProperties"/>
    </bean>
	<bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <property name="authenticationUserDetailsService" ref="mysqlUserService"/>
        <property name="serviceProperties" ref="serviceProperties" />
        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <constructor-arg index="0" value="${cas.server.url}" />
            </bean>
        </property>
        <property name="key" value="casAuthenticationProviderKey"/>
    </bean>
    <bean id="proxyGrantingTicketStorage" class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl" />
	<bean id="casAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <property name="defaultFailureUrl" value="/casfailed.jsp"/>
            </bean>
        </property>
        <property name="authenticationSuccessHandler">
            <bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
                <property name="useReferer" value="true"/>
            </bean>
        </property>
    </bean>
    
    <bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        <property name="service" value="${cas.service.url}/j_spring_cas_security_check"/>
        <property name="sendRenew" value="false"/>
    </bean>
    
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />	 
</beans>  